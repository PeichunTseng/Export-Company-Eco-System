/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Shipping;

import Business.Airline.Flight;
import Business.Department.DataDepartment;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.User.User;
import javax.swing.JPanel;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


;

/**
 *
 * @author raoyuhuizi
 */
public class ShippingWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form DataPanel
     */
    private JPanel userProcessContainer;
    private DataDepartment dataDep;
    private Enterprise enterprise;
    private User user;
    private Network network;
    
    public ShippingWorkAreaJPanel(JPanel userProcessContainer, User user, DataDepartment dataDep, Enterprise enterprise, Network network)//, AirlineDirectory ad) 
    {
        this.userProcessContainer = userProcessContainer;
        this.user = user;
        this.dataDep = dataDep;
        this.enterprise = enterprise;
        this.network = network;
        initComponents();
        valueLabel.setText(enterprise.getName());
        networkLabel.setText(network.getName());
        refreshAllTable();
        refreshEnterpriseTable();
    }
    
    public void refreshAllTable() {
        int rowCount = shippingTable.getRowCount();
        DefaultTableModel model = (DefaultTableModel)shippingTable.getModel();
        for(int i=rowCount-1;i>=0;i--) {
            model.removeRow(i);
        }
        
        for(Flight f : network.getNetworkDataStore().getFliList()) {
            Object row[] = new Object[5];
            row[0] = f.getFlightnumber();
            row[1] = f.getEnterpriseName();
            row[2] = f;
            row[3] = f.getPrice();
            row[4] = f.getShippingFee();
            model.addRow(row);
            }
        }
        
        public void refreshAllTable(List<Flight> flights) {
        int rowCount = shippingTable.getRowCount();
        DefaultTableModel model = (DefaultTableModel)shippingTable.getModel();
        for(int i=rowCount-1;i>=0;i--) {
            model.removeRow(i);
        }
        for(Flight f : flights) {
            Object row[] = new Object[5];
            row[0] = f.getFlightnumber();
            row[1] = f.getEnterpriseName();
            row[2] = f;
            row[3] = f.getPrice();
            row[4] = f.getShippingFee();
            model.addRow(row);
            }
        }
    
        public void refreshEnterpriseTable() {
        int rowCount = enterpriseTable.getRowCount();
        DefaultTableModel model = (DefaultTableModel)enterpriseTable.getModel();
        for(int i=rowCount-1;i>=0;i--) {
            model.removeRow(i);
        }
        
        for(Flight f : enterprise.getDatastore().getFliList()) {
            Object row[] = new Object[5];
            row[0] = f.getFlightnumber();
            row[1] = f.getEnterpriseName();
            row[2] = f;
            row[3] = f.getPrice();
            row[4] = f.getShippingFee();
            model.addRow(row);
            }
        }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        enterpriseLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        enterpriseTable = new javax.swing.JTable();
        enterpriseLabel = new javax.swing.JLabel();
        enterpriseLabel2 = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        networkLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        shippingTable = new javax.swing.JTable();
        cityText = new javax.swing.JTextField();
        Search = new javax.swing.JButton();
        Add = new javax.swing.JButton();
        Undo = new javax.swing.JButton();

        enterpriseLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel1.setText("DataWork");

        enterpriseTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Route Number", "Transport Company", "City", "Price", "Capacity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(enterpriseTable);
        if (enterpriseTable.getColumnModel().getColumnCount() > 0) {
            enterpriseTable.getColumnModel().getColumn(0).setResizable(false);
            enterpriseTable.getColumnModel().getColumn(1).setResizable(false);
            enterpriseTable.getColumnModel().getColumn(2).setResizable(false);
            enterpriseTable.getColumnModel().getColumn(3).setResizable(false);
            enterpriseTable.getColumnModel().getColumn(4).setResizable(false);
        }

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel.setText("EnterPrise :");

        enterpriseLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel2.setText("Network:");

        valueLabel.setText("<value>");

        networkLabel.setText("<value>");

        shippingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Route Number", "Transport Company", "City", "Price", "Capacity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(shippingTable);
        if (shippingTable.getColumnModel().getColumnCount() > 0) {
            shippingTable.getColumnModel().getColumn(0).setResizable(false);
            shippingTable.getColumnModel().getColumn(1).setResizable(false);
            shippingTable.getColumnModel().getColumn(2).setResizable(false);
            shippingTable.getColumnModel().getColumn(3).setResizable(false);
            shippingTable.getColumnModel().getColumn(4).setResizable(false);
        }

        Search.setText("Search");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });

        Add.setText("Add");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });

        Undo.setText("Undo");
        Undo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UndoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(enterpriseLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(networkLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cityText, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(valueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(Search)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addComponent(Undo, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Add, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(171, 171, 171))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(237, 237, 237)
                        .addComponent(enterpriseLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 577, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 577, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(enterpriseLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(networkLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enterpriseLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(valueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cityText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Search))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Add)
                    .addComponent(Undo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        // TODO add your handling code here:
        String city = cityText.getText();
        List<Flight> flights = new ArrayList<>();
        if(city.equals("")){
            refreshAllTable();
            return;
        }
        for(Flight f : network.getNetworkDataStore().getFliList()){
            if(f.getCty().equals(city)){
                flights.add(f);
            }
        }
        refreshAllTable(flights);
    }//GEN-LAST:event_SearchActionPerformed

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        // TODO add your handling code here:
        int selectedRow = shippingTable.getSelectedRow();
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please Select a Row");
            return;
        }
        Flight selectedFlight = (Flight)shippingTable.getValueAt(selectedRow,2);
        boolean alreadyHas = false;
        for(Flight flight : enterprise.getDatastore().getFliList()){
            if(flight.getCty().equals(selectedFlight.getCty())){
                alreadyHas = true;
            }
        }
        if(alreadyHas){
            JOptionPane.showMessageDialog(null, "You can only select one route for each country");
        }else{
            enterprise.getDatastore().getFliList().add(selectedFlight);
            refreshEnterpriseTable();
        }
        
    }//GEN-LAST:event_AddActionPerformed

    private void UndoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UndoActionPerformed
        // TODO add your handling code here:
        int selectedRow = enterpriseTable.getSelectedRow();
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please Select a Row");
            return;
        }
        Flight flight = (Flight)enterpriseTable.getValueAt(selectedRow,2);
        enterprise.getDatastore().getFliList().remove(flight);
        refreshEnterpriseTable();
    }//GEN-LAST:event_UndoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JButton Search;
    private javax.swing.JButton Undo;
    private javax.swing.JTextField cityText;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel enterpriseLabel1;
    private javax.swing.JLabel enterpriseLabel2;
    private javax.swing.JTable enterpriseTable;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel networkLabel;
    private javax.swing.JTable shippingTable;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables
}
