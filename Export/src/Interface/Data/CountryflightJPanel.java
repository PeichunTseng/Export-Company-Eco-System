/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.Data;

import Business.Airline.Airline;
import Business.Airline.AirlineDirectory;
import Business.Airline.Flight;
import Business.Airline.FlightDirectory;
//import UserInterface.AdminstrativeRole.ManageSuppliers;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author peichun
 */
public class CountryflightJPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private AirlineDirectory airlineDir;
    private Airline air;
    private Flight fli;
    



    
     public CountryflightJPanel(JPanel upc,Airline s, Flight p) {
        initComponents();
        userProcessContainer = upc;
        fli = p;  
        air = s;
//        if(p==null)
        refreshTable();
//        
//        if(p!=null)
//            refreshTable1();
            
    }
    
    public void refreshTable() {
        int rowCount = masterScheduleTable.getRowCount();
        DefaultTableModel model = (DefaultTableModel)masterScheduleTable.getModel();
        for(int i=rowCount-1;i>=0;i--) {
            model.removeRow(i);
        }
        
//        for(Supplier s : supplierDir.getSupplierDict())
        if(fli==null)
        for(Flight p : air.getFltList().getFltList()) {
            Object row[] = new Object[6];
            row[0] = air;
            row[1] = p.getFlightnumber();
            row[2] = p.getCty();
            row[3] = p.getTime();
            row[4] = p.getPrice();
            row[5] = p.getCapacity();
            //sup=s;
                                                                
            model.addRow(row);
            }
        else{
            Object row[] = new Object[8];
            row[0] = air;
            row[1] = fli.getFlightnumber();
            row[2] = fli.getCty();
            row[3] = fli.getTime();
            row[4] = fli.getPrice();
            row[5] = fli.getCapacity();
            //sup=s;
                                                                
            model.addRow(row);
        }
        
    }
//    public void refreshTable1() {
//        int rowCount = masterScheduleTable.getRowCount();
//        DefaultTableModel model = (DefaultTableModel)masterScheduleTable.getModel();
//        for(int i=rowCount-1;i>=0;i--) {
//            model.removeRow(i);
//        }
////        for(Supplier s : supplierDir.getSupplierDict())
//        
//            Object row[] = new Object[8];
//            row[0] = sup;
//            row[1] = pro.getFlightnumber();
//            row[2] = pro.getFromlocation();
//            row[3] = pro.getTolocation();
//            row[4] = pro.getScheduletime();
//            row[5] = pro.getPrice();
//            row[6] = pro.getModelNumber();
//            row[7] = pro;
//            //sup=s;
//                                                                
//            model.addRow(row);
//            
//    }
        
//        else{
//            Object row[] = new Object[8];
//            row[0] = sup;
//            row[1] = pro.getFlightnumber();
//            row[2] = pro.getFromlocation();
//            row[3] = pro.getTolocation();
//            row[4] = pro.getScheduletime();
//            row[5] = pro.getPrice();
//            row[6] = pro.getModelNumber();
//            row[7] = pro;
//            model.addRow(row);
//        }
//        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        masterScheduleTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        masterScheduleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Airliner", "Flight number", "Departure From", "Destination", "Departure Time", "Price", "Airplane ID", "Airplane model"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        masterScheduleTable.setRowHeight(25);
        jScrollPane1.setViewportView(masterScheduleTable);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel1.setText("Prefer Flight");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(287, 287, 287)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(326, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 751, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(356, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(93, 93, 93)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(137, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable masterScheduleTable;
    // End of variables declaration//GEN-END:variables
}
